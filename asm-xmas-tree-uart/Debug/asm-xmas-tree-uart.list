
asm-xmas-tree-uart.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000928  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000ab0  08000ab8  00001ab8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000ab0  08000ab0  00001ab8  2**0
                  CONTENTS
  4 .ARM          00000000  08000ab0  08000ab0  00001ab8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000ab0  08000ab8  00001ab8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000ab0  08000ab0  00001ab0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000ab4  08000ab4  00001ab4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001ab8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001ab8  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001ab8  2**0
                  CONTENTS, READONLY
 13 .debug_line   00000107  00000000  00000000  00001ae8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line_str 00000076  00000000  00000000  00001bef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_info   00000055  00000000  00000000  00001c65  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_abbrev 00000038  00000000  00000000  00001cba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 00000048  00000000  00000000  00001cf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00000092  00000000  00000000  00001d40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_rnglists 00000019  00000000  00000000  00001dd2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000002c  00000000  00000000  00001dec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000a98 	.word	0x08000a98

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000a98 	.word	0x08000a98

080001c8 <main>:
  .set width_of_triangle, width_of_triangle+2
 .endr
.endm
main:

 bl rcc_config
 80001c8:	f000 fbf0 	bl	80009ac <rcc_config>
 bl moder_config
 80001cc:	f000 fbf9 	bl	80009c2 <moder_config>

 bl usart_config
 80001d0:	f000 fbd9 	bl	8000986 <usart_config>


 PRINT_XMAS_TREE TREE_SIZE
 80001d4:	f04f 0120 	mov.w	r1, #32
 80001d8:	b500      	push	{lr}
 80001da:	f000 fbcc 	bl	8000976 <usart_send_char_pooling>
 80001de:	f85d eb04 	ldr.w	lr, [sp], #4
 80001e2:	b500      	push	{lr}
 80001e4:	f000 fbc7 	bl	8000976 <usart_send_char_pooling>
 80001e8:	f85d eb04 	ldr.w	lr, [sp], #4
 80001ec:	b500      	push	{lr}
 80001ee:	f000 fbc2 	bl	8000976 <usart_send_char_pooling>
 80001f2:	f85d eb04 	ldr.w	lr, [sp], #4
 80001f6:	b500      	push	{lr}
 80001f8:	f000 fbbd 	bl	8000976 <usart_send_char_pooling>
 80001fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8000200:	b500      	push	{lr}
 8000202:	f000 fbb8 	bl	8000976 <usart_send_char_pooling>
 8000206:	f85d eb04 	ldr.w	lr, [sp], #4
 800020a:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 800020e:	b500      	push	{lr}
 8000210:	f000 fbb1 	bl	8000976 <usart_send_char_pooling>
 8000214:	f85d eb04 	ldr.w	lr, [sp], #4
 8000218:	f04f 010a 	mov.w	r1, #10
 800021c:	b500      	push	{lr}
 800021e:	f000 fbaa 	bl	8000976 <usart_send_char_pooling>
 8000222:	b500      	push	{lr}
 8000224:	f04f 0120 	mov.w	r1, #32
 8000228:	b500      	push	{lr}
 800022a:	f000 fba4 	bl	8000976 <usart_send_char_pooling>
 800022e:	f85d eb04 	ldr.w	lr, [sp], #4
 8000232:	b500      	push	{lr}
 8000234:	f000 fb9f 	bl	8000976 <usart_send_char_pooling>
 8000238:	f85d eb04 	ldr.w	lr, [sp], #4
 800023c:	b500      	push	{lr}
 800023e:	f000 fb9a 	bl	8000976 <usart_send_char_pooling>
 8000242:	f85d eb04 	ldr.w	lr, [sp], #4
 8000246:	b500      	push	{lr}
 8000248:	f000 fb95 	bl	8000976 <usart_send_char_pooling>
 800024c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000250:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 8000254:	b500      	push	{lr}
 8000256:	f000 fb8e 	bl	8000976 <usart_send_char_pooling>
 800025a:	f85d eb04 	ldr.w	lr, [sp], #4
 800025e:	b500      	push	{lr}
 8000260:	f000 fb89 	bl	8000976 <usart_send_char_pooling>
 8000264:	f85d eb04 	ldr.w	lr, [sp], #4
 8000268:	b500      	push	{lr}
 800026a:	f000 fb84 	bl	8000976 <usart_send_char_pooling>
 800026e:	f85d eb04 	ldr.w	lr, [sp], #4
 8000272:	f04f 010a 	mov.w	r1, #10
 8000276:	b500      	push	{lr}
 8000278:	f000 fb7d 	bl	8000976 <usart_send_char_pooling>
 800027c:	b500      	push	{lr}
 800027e:	f04f 0120 	mov.w	r1, #32
 8000282:	b500      	push	{lr}
 8000284:	f000 fb77 	bl	8000976 <usart_send_char_pooling>
 8000288:	f85d eb04 	ldr.w	lr, [sp], #4
 800028c:	b500      	push	{lr}
 800028e:	f000 fb72 	bl	8000976 <usart_send_char_pooling>
 8000292:	f85d eb04 	ldr.w	lr, [sp], #4
 8000296:	b500      	push	{lr}
 8000298:	f000 fb6d 	bl	8000976 <usart_send_char_pooling>
 800029c:	f85d eb04 	ldr.w	lr, [sp], #4
 80002a0:	b500      	push	{lr}
 80002a2:	f000 fb68 	bl	8000976 <usart_send_char_pooling>
 80002a6:	f85d eb04 	ldr.w	lr, [sp], #4
 80002aa:	b500      	push	{lr}
 80002ac:	f000 fb63 	bl	8000976 <usart_send_char_pooling>
 80002b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80002b4:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 80002b8:	b500      	push	{lr}
 80002ba:	f000 fb5c 	bl	8000976 <usart_send_char_pooling>
 80002be:	f85d eb04 	ldr.w	lr, [sp], #4
 80002c2:	f04f 010a 	mov.w	r1, #10
 80002c6:	b500      	push	{lr}
 80002c8:	f000 fb55 	bl	8000976 <usart_send_char_pooling>
 80002cc:	b500      	push	{lr}
 80002ce:	f04f 0120 	mov.w	r1, #32
 80002d2:	b500      	push	{lr}
 80002d4:	f000 fb4f 	bl	8000976 <usart_send_char_pooling>
 80002d8:	f85d eb04 	ldr.w	lr, [sp], #4
 80002dc:	b500      	push	{lr}
 80002de:	f000 fb4a 	bl	8000976 <usart_send_char_pooling>
 80002e2:	f85d eb04 	ldr.w	lr, [sp], #4
 80002e6:	b500      	push	{lr}
 80002e8:	f000 fb45 	bl	8000976 <usart_send_char_pooling>
 80002ec:	f85d eb04 	ldr.w	lr, [sp], #4
 80002f0:	b500      	push	{lr}
 80002f2:	f000 fb40 	bl	8000976 <usart_send_char_pooling>
 80002f6:	f85d eb04 	ldr.w	lr, [sp], #4
 80002fa:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 80002fe:	b500      	push	{lr}
 8000300:	f000 fb39 	bl	8000976 <usart_send_char_pooling>
 8000304:	f85d eb04 	ldr.w	lr, [sp], #4
 8000308:	b500      	push	{lr}
 800030a:	f000 fb34 	bl	8000976 <usart_send_char_pooling>
 800030e:	f85d eb04 	ldr.w	lr, [sp], #4
 8000312:	b500      	push	{lr}
 8000314:	f000 fb2f 	bl	8000976 <usart_send_char_pooling>
 8000318:	f85d eb04 	ldr.w	lr, [sp], #4
 800031c:	f04f 010a 	mov.w	r1, #10
 8000320:	b500      	push	{lr}
 8000322:	f000 fb28 	bl	8000976 <usart_send_char_pooling>
 8000326:	b500      	push	{lr}
 8000328:	f04f 0120 	mov.w	r1, #32
 800032c:	b500      	push	{lr}
 800032e:	f000 fb22 	bl	8000976 <usart_send_char_pooling>
 8000332:	f85d eb04 	ldr.w	lr, [sp], #4
 8000336:	b500      	push	{lr}
 8000338:	f000 fb1d 	bl	8000976 <usart_send_char_pooling>
 800033c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000340:	b500      	push	{lr}
 8000342:	f000 fb18 	bl	8000976 <usart_send_char_pooling>
 8000346:	f85d eb04 	ldr.w	lr, [sp], #4
 800034a:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 800034e:	b500      	push	{lr}
 8000350:	f000 fb11 	bl	8000976 <usart_send_char_pooling>
 8000354:	f85d eb04 	ldr.w	lr, [sp], #4
 8000358:	b500      	push	{lr}
 800035a:	f000 fb0c 	bl	8000976 <usart_send_char_pooling>
 800035e:	f85d eb04 	ldr.w	lr, [sp], #4
 8000362:	b500      	push	{lr}
 8000364:	f000 fb07 	bl	8000976 <usart_send_char_pooling>
 8000368:	f85d eb04 	ldr.w	lr, [sp], #4
 800036c:	b500      	push	{lr}
 800036e:	f000 fb02 	bl	8000976 <usart_send_char_pooling>
 8000372:	f85d eb04 	ldr.w	lr, [sp], #4
 8000376:	b500      	push	{lr}
 8000378:	f000 fafd 	bl	8000976 <usart_send_char_pooling>
 800037c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000380:	f04f 010a 	mov.w	r1, #10
 8000384:	b500      	push	{lr}
 8000386:	f000 faf6 	bl	8000976 <usart_send_char_pooling>
 800038a:	b500      	push	{lr}
 800038c:	f04f 0120 	mov.w	r1, #32
 8000390:	b500      	push	{lr}
 8000392:	f000 faf0 	bl	8000976 <usart_send_char_pooling>
 8000396:	f85d eb04 	ldr.w	lr, [sp], #4
 800039a:	b500      	push	{lr}
 800039c:	f000 faeb 	bl	8000976 <usart_send_char_pooling>
 80003a0:	f85d eb04 	ldr.w	lr, [sp], #4
 80003a4:	b500      	push	{lr}
 80003a6:	f000 fae6 	bl	8000976 <usart_send_char_pooling>
 80003aa:	f85d eb04 	ldr.w	lr, [sp], #4
 80003ae:	b500      	push	{lr}
 80003b0:	f000 fae1 	bl	8000976 <usart_send_char_pooling>
 80003b4:	f85d eb04 	ldr.w	lr, [sp], #4
 80003b8:	b500      	push	{lr}
 80003ba:	f000 fadc 	bl	8000976 <usart_send_char_pooling>
 80003be:	f85d eb04 	ldr.w	lr, [sp], #4
 80003c2:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 80003c6:	b500      	push	{lr}
 80003c8:	f000 fad5 	bl	8000976 <usart_send_char_pooling>
 80003cc:	f85d eb04 	ldr.w	lr, [sp], #4
 80003d0:	f04f 010a 	mov.w	r1, #10
 80003d4:	b500      	push	{lr}
 80003d6:	f000 face 	bl	8000976 <usart_send_char_pooling>
 80003da:	b500      	push	{lr}
 80003dc:	f04f 0120 	mov.w	r1, #32
 80003e0:	b500      	push	{lr}
 80003e2:	f000 fac8 	bl	8000976 <usart_send_char_pooling>
 80003e6:	f85d eb04 	ldr.w	lr, [sp], #4
 80003ea:	b500      	push	{lr}
 80003ec:	f000 fac3 	bl	8000976 <usart_send_char_pooling>
 80003f0:	f85d eb04 	ldr.w	lr, [sp], #4
 80003f4:	b500      	push	{lr}
 80003f6:	f000 fabe 	bl	8000976 <usart_send_char_pooling>
 80003fa:	f85d eb04 	ldr.w	lr, [sp], #4
 80003fe:	b500      	push	{lr}
 8000400:	f000 fab9 	bl	8000976 <usart_send_char_pooling>
 8000404:	f85d eb04 	ldr.w	lr, [sp], #4
 8000408:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 800040c:	b500      	push	{lr}
 800040e:	f000 fab2 	bl	8000976 <usart_send_char_pooling>
 8000412:	f85d eb04 	ldr.w	lr, [sp], #4
 8000416:	b500      	push	{lr}
 8000418:	f000 faad 	bl	8000976 <usart_send_char_pooling>
 800041c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000420:	b500      	push	{lr}
 8000422:	f000 faa8 	bl	8000976 <usart_send_char_pooling>
 8000426:	f85d eb04 	ldr.w	lr, [sp], #4
 800042a:	f04f 010a 	mov.w	r1, #10
 800042e:	b500      	push	{lr}
 8000430:	f000 faa1 	bl	8000976 <usart_send_char_pooling>
 8000434:	b500      	push	{lr}
 8000436:	f04f 0120 	mov.w	r1, #32
 800043a:	b500      	push	{lr}
 800043c:	f000 fa9b 	bl	8000976 <usart_send_char_pooling>
 8000440:	f85d eb04 	ldr.w	lr, [sp], #4
 8000444:	b500      	push	{lr}
 8000446:	f000 fa96 	bl	8000976 <usart_send_char_pooling>
 800044a:	f85d eb04 	ldr.w	lr, [sp], #4
 800044e:	b500      	push	{lr}
 8000450:	f000 fa91 	bl	8000976 <usart_send_char_pooling>
 8000454:	f85d eb04 	ldr.w	lr, [sp], #4
 8000458:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 800045c:	b500      	push	{lr}
 800045e:	f000 fa8a 	bl	8000976 <usart_send_char_pooling>
 8000462:	f85d eb04 	ldr.w	lr, [sp], #4
 8000466:	b500      	push	{lr}
 8000468:	f000 fa85 	bl	8000976 <usart_send_char_pooling>
 800046c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000470:	b500      	push	{lr}
 8000472:	f000 fa80 	bl	8000976 <usart_send_char_pooling>
 8000476:	f85d eb04 	ldr.w	lr, [sp], #4
 800047a:	b500      	push	{lr}
 800047c:	f000 fa7b 	bl	8000976 <usart_send_char_pooling>
 8000480:	f85d eb04 	ldr.w	lr, [sp], #4
 8000484:	b500      	push	{lr}
 8000486:	f000 fa76 	bl	8000976 <usart_send_char_pooling>
 800048a:	f85d eb04 	ldr.w	lr, [sp], #4
 800048e:	f04f 010a 	mov.w	r1, #10
 8000492:	b500      	push	{lr}
 8000494:	f000 fa6f 	bl	8000976 <usart_send_char_pooling>
 8000498:	b500      	push	{lr}
 800049a:	f04f 0120 	mov.w	r1, #32
 800049e:	b500      	push	{lr}
 80004a0:	f000 fa69 	bl	8000976 <usart_send_char_pooling>
 80004a4:	f85d eb04 	ldr.w	lr, [sp], #4
 80004a8:	b500      	push	{lr}
 80004aa:	f000 fa64 	bl	8000976 <usart_send_char_pooling>
 80004ae:	f85d eb04 	ldr.w	lr, [sp], #4
 80004b2:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 80004b6:	b500      	push	{lr}
 80004b8:	f000 fa5d 	bl	8000976 <usart_send_char_pooling>
 80004bc:	f85d eb04 	ldr.w	lr, [sp], #4
 80004c0:	b500      	push	{lr}
 80004c2:	f000 fa58 	bl	8000976 <usart_send_char_pooling>
 80004c6:	f85d eb04 	ldr.w	lr, [sp], #4
 80004ca:	b500      	push	{lr}
 80004cc:	f000 fa53 	bl	8000976 <usart_send_char_pooling>
 80004d0:	f85d eb04 	ldr.w	lr, [sp], #4
 80004d4:	b500      	push	{lr}
 80004d6:	f000 fa4e 	bl	8000976 <usart_send_char_pooling>
 80004da:	f85d eb04 	ldr.w	lr, [sp], #4
 80004de:	b500      	push	{lr}
 80004e0:	f000 fa49 	bl	8000976 <usart_send_char_pooling>
 80004e4:	f85d eb04 	ldr.w	lr, [sp], #4
 80004e8:	b500      	push	{lr}
 80004ea:	f000 fa44 	bl	8000976 <usart_send_char_pooling>
 80004ee:	f85d eb04 	ldr.w	lr, [sp], #4
 80004f2:	b500      	push	{lr}
 80004f4:	f000 fa3f 	bl	8000976 <usart_send_char_pooling>
 80004f8:	f85d eb04 	ldr.w	lr, [sp], #4
 80004fc:	f04f 010a 	mov.w	r1, #10
 8000500:	b500      	push	{lr}
 8000502:	f000 fa38 	bl	8000976 <usart_send_char_pooling>
 8000506:	b500      	push	{lr}
 8000508:	f04f 0120 	mov.w	r1, #32
 800050c:	b500      	push	{lr}
 800050e:	f000 fa32 	bl	8000976 <usart_send_char_pooling>
 8000512:	f85d eb04 	ldr.w	lr, [sp], #4
 8000516:	b500      	push	{lr}
 8000518:	f000 fa2d 	bl	8000976 <usart_send_char_pooling>
 800051c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000520:	b500      	push	{lr}
 8000522:	f000 fa28 	bl	8000976 <usart_send_char_pooling>
 8000526:	f85d eb04 	ldr.w	lr, [sp], #4
 800052a:	b500      	push	{lr}
 800052c:	f000 fa23 	bl	8000976 <usart_send_char_pooling>
 8000530:	f85d eb04 	ldr.w	lr, [sp], #4
 8000534:	b500      	push	{lr}
 8000536:	f000 fa1e 	bl	8000976 <usart_send_char_pooling>
 800053a:	f85d eb04 	ldr.w	lr, [sp], #4
 800053e:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 8000542:	b500      	push	{lr}
 8000544:	f000 fa17 	bl	8000976 <usart_send_char_pooling>
 8000548:	f85d eb04 	ldr.w	lr, [sp], #4
 800054c:	f04f 010a 	mov.w	r1, #10
 8000550:	b500      	push	{lr}
 8000552:	f000 fa10 	bl	8000976 <usart_send_char_pooling>
 8000556:	b500      	push	{lr}
 8000558:	f04f 0120 	mov.w	r1, #32
 800055c:	b500      	push	{lr}
 800055e:	f000 fa0a 	bl	8000976 <usart_send_char_pooling>
 8000562:	f85d eb04 	ldr.w	lr, [sp], #4
 8000566:	b500      	push	{lr}
 8000568:	f000 fa05 	bl	8000976 <usart_send_char_pooling>
 800056c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000570:	b500      	push	{lr}
 8000572:	f000 fa00 	bl	8000976 <usart_send_char_pooling>
 8000576:	f85d eb04 	ldr.w	lr, [sp], #4
 800057a:	b500      	push	{lr}
 800057c:	f000 f9fb 	bl	8000976 <usart_send_char_pooling>
 8000580:	f85d eb04 	ldr.w	lr, [sp], #4
 8000584:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 8000588:	b500      	push	{lr}
 800058a:	f000 f9f4 	bl	8000976 <usart_send_char_pooling>
 800058e:	f85d eb04 	ldr.w	lr, [sp], #4
 8000592:	b500      	push	{lr}
 8000594:	f000 f9ef 	bl	8000976 <usart_send_char_pooling>
 8000598:	f85d eb04 	ldr.w	lr, [sp], #4
 800059c:	b500      	push	{lr}
 800059e:	f000 f9ea 	bl	8000976 <usart_send_char_pooling>
 80005a2:	f85d eb04 	ldr.w	lr, [sp], #4
 80005a6:	f04f 010a 	mov.w	r1, #10
 80005aa:	b500      	push	{lr}
 80005ac:	f000 f9e3 	bl	8000976 <usart_send_char_pooling>
 80005b0:	b500      	push	{lr}
 80005b2:	f04f 0120 	mov.w	r1, #32
 80005b6:	b500      	push	{lr}
 80005b8:	f000 f9dd 	bl	8000976 <usart_send_char_pooling>
 80005bc:	f85d eb04 	ldr.w	lr, [sp], #4
 80005c0:	b500      	push	{lr}
 80005c2:	f000 f9d8 	bl	8000976 <usart_send_char_pooling>
 80005c6:	f85d eb04 	ldr.w	lr, [sp], #4
 80005ca:	b500      	push	{lr}
 80005cc:	f000 f9d3 	bl	8000976 <usart_send_char_pooling>
 80005d0:	f85d eb04 	ldr.w	lr, [sp], #4
 80005d4:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 80005d8:	b500      	push	{lr}
 80005da:	f000 f9cc 	bl	8000976 <usart_send_char_pooling>
 80005de:	f85d eb04 	ldr.w	lr, [sp], #4
 80005e2:	b500      	push	{lr}
 80005e4:	f000 f9c7 	bl	8000976 <usart_send_char_pooling>
 80005e8:	f85d eb04 	ldr.w	lr, [sp], #4
 80005ec:	b500      	push	{lr}
 80005ee:	f000 f9c2 	bl	8000976 <usart_send_char_pooling>
 80005f2:	f85d eb04 	ldr.w	lr, [sp], #4
 80005f6:	b500      	push	{lr}
 80005f8:	f000 f9bd 	bl	8000976 <usart_send_char_pooling>
 80005fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8000600:	b500      	push	{lr}
 8000602:	f000 f9b8 	bl	8000976 <usart_send_char_pooling>
 8000606:	f85d eb04 	ldr.w	lr, [sp], #4
 800060a:	f04f 010a 	mov.w	r1, #10
 800060e:	b500      	push	{lr}
 8000610:	f000 f9b1 	bl	8000976 <usart_send_char_pooling>
 8000614:	b500      	push	{lr}
 8000616:	f04f 0120 	mov.w	r1, #32
 800061a:	b500      	push	{lr}
 800061c:	f000 f9ab 	bl	8000976 <usart_send_char_pooling>
 8000620:	f85d eb04 	ldr.w	lr, [sp], #4
 8000624:	b500      	push	{lr}
 8000626:	f000 f9a6 	bl	8000976 <usart_send_char_pooling>
 800062a:	f85d eb04 	ldr.w	lr, [sp], #4
 800062e:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 8000632:	b500      	push	{lr}
 8000634:	f000 f99f 	bl	8000976 <usart_send_char_pooling>
 8000638:	f85d eb04 	ldr.w	lr, [sp], #4
 800063c:	b500      	push	{lr}
 800063e:	f000 f99a 	bl	8000976 <usart_send_char_pooling>
 8000642:	f85d eb04 	ldr.w	lr, [sp], #4
 8000646:	b500      	push	{lr}
 8000648:	f000 f995 	bl	8000976 <usart_send_char_pooling>
 800064c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000650:	b500      	push	{lr}
 8000652:	f000 f990 	bl	8000976 <usart_send_char_pooling>
 8000656:	f85d eb04 	ldr.w	lr, [sp], #4
 800065a:	b500      	push	{lr}
 800065c:	f000 f98b 	bl	8000976 <usart_send_char_pooling>
 8000660:	f85d eb04 	ldr.w	lr, [sp], #4
 8000664:	b500      	push	{lr}
 8000666:	f000 f986 	bl	8000976 <usart_send_char_pooling>
 800066a:	f85d eb04 	ldr.w	lr, [sp], #4
 800066e:	b500      	push	{lr}
 8000670:	f000 f981 	bl	8000976 <usart_send_char_pooling>
 8000674:	f85d eb04 	ldr.w	lr, [sp], #4
 8000678:	f04f 010a 	mov.w	r1, #10
 800067c:	b500      	push	{lr}
 800067e:	f000 f97a 	bl	8000976 <usart_send_char_pooling>
 8000682:	b500      	push	{lr}
 8000684:	f04f 0120 	mov.w	r1, #32
 8000688:	b500      	push	{lr}
 800068a:	f000 f974 	bl	8000976 <usart_send_char_pooling>
 800068e:	f85d eb04 	ldr.w	lr, [sp], #4
 8000692:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 8000696:	b500      	push	{lr}
 8000698:	f000 f96d 	bl	8000976 <usart_send_char_pooling>
 800069c:	f85d eb04 	ldr.w	lr, [sp], #4
 80006a0:	b500      	push	{lr}
 80006a2:	f000 f968 	bl	8000976 <usart_send_char_pooling>
 80006a6:	f85d eb04 	ldr.w	lr, [sp], #4
 80006aa:	b500      	push	{lr}
 80006ac:	f000 f963 	bl	8000976 <usart_send_char_pooling>
 80006b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80006b4:	b500      	push	{lr}
 80006b6:	f000 f95e 	bl	8000976 <usart_send_char_pooling>
 80006ba:	f85d eb04 	ldr.w	lr, [sp], #4
 80006be:	b500      	push	{lr}
 80006c0:	f000 f959 	bl	8000976 <usart_send_char_pooling>
 80006c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80006c8:	b500      	push	{lr}
 80006ca:	f000 f954 	bl	8000976 <usart_send_char_pooling>
 80006ce:	f85d eb04 	ldr.w	lr, [sp], #4
 80006d2:	b500      	push	{lr}
 80006d4:	f000 f94f 	bl	8000976 <usart_send_char_pooling>
 80006d8:	f85d eb04 	ldr.w	lr, [sp], #4
 80006dc:	b500      	push	{lr}
 80006de:	f000 f94a 	bl	8000976 <usart_send_char_pooling>
 80006e2:	f85d eb04 	ldr.w	lr, [sp], #4
 80006e6:	b500      	push	{lr}
 80006e8:	f000 f945 	bl	8000976 <usart_send_char_pooling>
 80006ec:	f85d eb04 	ldr.w	lr, [sp], #4
 80006f0:	f04f 010a 	mov.w	r1, #10
 80006f4:	b500      	push	{lr}
 80006f6:	f000 f93e 	bl	8000976 <usart_send_char_pooling>
 80006fa:	b500      	push	{lr}
 80006fc:	f04f 0120 	mov.w	r1, #32
 8000700:	b500      	push	{lr}
 8000702:	f000 f938 	bl	8000976 <usart_send_char_pooling>
 8000706:	f85d eb04 	ldr.w	lr, [sp], #4
 800070a:	b500      	push	{lr}
 800070c:	f000 f933 	bl	8000976 <usart_send_char_pooling>
 8000710:	f85d eb04 	ldr.w	lr, [sp], #4
 8000714:	b500      	push	{lr}
 8000716:	f000 f92e 	bl	8000976 <usart_send_char_pooling>
 800071a:	f85d eb04 	ldr.w	lr, [sp], #4
 800071e:	b500      	push	{lr}
 8000720:	f000 f929 	bl	8000976 <usart_send_char_pooling>
 8000724:	f85d eb04 	ldr.w	lr, [sp], #4
 8000728:	b500      	push	{lr}
 800072a:	f000 f924 	bl	8000976 <usart_send_char_pooling>
 800072e:	f85d eb04 	ldr.w	lr, [sp], #4
 8000732:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 8000736:	b500      	push	{lr}
 8000738:	f000 f91d 	bl	8000976 <usart_send_char_pooling>
 800073c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000740:	f04f 010a 	mov.w	r1, #10
 8000744:	b500      	push	{lr}
 8000746:	f000 f916 	bl	8000976 <usart_send_char_pooling>
 800074a:	b500      	push	{lr}
 800074c:	f04f 0120 	mov.w	r1, #32
 8000750:	b500      	push	{lr}
 8000752:	f000 f910 	bl	8000976 <usart_send_char_pooling>
 8000756:	f85d eb04 	ldr.w	lr, [sp], #4
 800075a:	b500      	push	{lr}
 800075c:	f000 f90b 	bl	8000976 <usart_send_char_pooling>
 8000760:	f85d eb04 	ldr.w	lr, [sp], #4
 8000764:	b500      	push	{lr}
 8000766:	f000 f906 	bl	8000976 <usart_send_char_pooling>
 800076a:	f85d eb04 	ldr.w	lr, [sp], #4
 800076e:	b500      	push	{lr}
 8000770:	f000 f901 	bl	8000976 <usart_send_char_pooling>
 8000774:	f85d eb04 	ldr.w	lr, [sp], #4
 8000778:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 800077c:	b500      	push	{lr}
 800077e:	f000 f8fa 	bl	8000976 <usart_send_char_pooling>
 8000782:	f85d eb04 	ldr.w	lr, [sp], #4
 8000786:	b500      	push	{lr}
 8000788:	f000 f8f5 	bl	8000976 <usart_send_char_pooling>
 800078c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000790:	b500      	push	{lr}
 8000792:	f000 f8f0 	bl	8000976 <usart_send_char_pooling>
 8000796:	f85d eb04 	ldr.w	lr, [sp], #4
 800079a:	f04f 010a 	mov.w	r1, #10
 800079e:	b500      	push	{lr}
 80007a0:	f000 f8e9 	bl	8000976 <usart_send_char_pooling>
 80007a4:	b500      	push	{lr}
 80007a6:	f04f 0120 	mov.w	r1, #32
 80007aa:	b500      	push	{lr}
 80007ac:	f000 f8e3 	bl	8000976 <usart_send_char_pooling>
 80007b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80007b4:	b500      	push	{lr}
 80007b6:	f000 f8de 	bl	8000976 <usart_send_char_pooling>
 80007ba:	f85d eb04 	ldr.w	lr, [sp], #4
 80007be:	b500      	push	{lr}
 80007c0:	f000 f8d9 	bl	8000976 <usart_send_char_pooling>
 80007c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80007c8:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 80007cc:	b500      	push	{lr}
 80007ce:	f000 f8d2 	bl	8000976 <usart_send_char_pooling>
 80007d2:	f85d eb04 	ldr.w	lr, [sp], #4
 80007d6:	b500      	push	{lr}
 80007d8:	f000 f8cd 	bl	8000976 <usart_send_char_pooling>
 80007dc:	f85d eb04 	ldr.w	lr, [sp], #4
 80007e0:	b500      	push	{lr}
 80007e2:	f000 f8c8 	bl	8000976 <usart_send_char_pooling>
 80007e6:	f85d eb04 	ldr.w	lr, [sp], #4
 80007ea:	b500      	push	{lr}
 80007ec:	f000 f8c3 	bl	8000976 <usart_send_char_pooling>
 80007f0:	f85d eb04 	ldr.w	lr, [sp], #4
 80007f4:	b500      	push	{lr}
 80007f6:	f000 f8be 	bl	8000976 <usart_send_char_pooling>
 80007fa:	f85d eb04 	ldr.w	lr, [sp], #4
 80007fe:	f04f 010a 	mov.w	r1, #10
 8000802:	b500      	push	{lr}
 8000804:	f000 f8b7 	bl	8000976 <usart_send_char_pooling>
 8000808:	b500      	push	{lr}
 800080a:	f04f 0120 	mov.w	r1, #32
 800080e:	b500      	push	{lr}
 8000810:	f000 f8b1 	bl	8000976 <usart_send_char_pooling>
 8000814:	f85d eb04 	ldr.w	lr, [sp], #4
 8000818:	b500      	push	{lr}
 800081a:	f000 f8ac 	bl	8000976 <usart_send_char_pooling>
 800081e:	f85d eb04 	ldr.w	lr, [sp], #4
 8000822:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 8000826:	b500      	push	{lr}
 8000828:	f000 f8a5 	bl	8000976 <usart_send_char_pooling>
 800082c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000830:	b500      	push	{lr}
 8000832:	f000 f8a0 	bl	8000976 <usart_send_char_pooling>
 8000836:	f85d eb04 	ldr.w	lr, [sp], #4
 800083a:	b500      	push	{lr}
 800083c:	f000 f89b 	bl	8000976 <usart_send_char_pooling>
 8000840:	f85d eb04 	ldr.w	lr, [sp], #4
 8000844:	b500      	push	{lr}
 8000846:	f000 f896 	bl	8000976 <usart_send_char_pooling>
 800084a:	f85d eb04 	ldr.w	lr, [sp], #4
 800084e:	b500      	push	{lr}
 8000850:	f000 f891 	bl	8000976 <usart_send_char_pooling>
 8000854:	f85d eb04 	ldr.w	lr, [sp], #4
 8000858:	b500      	push	{lr}
 800085a:	f000 f88c 	bl	8000976 <usart_send_char_pooling>
 800085e:	f85d eb04 	ldr.w	lr, [sp], #4
 8000862:	b500      	push	{lr}
 8000864:	f000 f887 	bl	8000976 <usart_send_char_pooling>
 8000868:	f85d eb04 	ldr.w	lr, [sp], #4
 800086c:	f04f 010a 	mov.w	r1, #10
 8000870:	b500      	push	{lr}
 8000872:	f000 f880 	bl	8000976 <usart_send_char_pooling>
 8000876:	b500      	push	{lr}
 8000878:	f04f 0120 	mov.w	r1, #32
 800087c:	b500      	push	{lr}
 800087e:	f000 f87a 	bl	8000976 <usart_send_char_pooling>
 8000882:	f85d eb04 	ldr.w	lr, [sp], #4
 8000886:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 800088a:	b500      	push	{lr}
 800088c:	f000 f873 	bl	8000976 <usart_send_char_pooling>
 8000890:	f85d eb04 	ldr.w	lr, [sp], #4
 8000894:	b500      	push	{lr}
 8000896:	f000 f86e 	bl	8000976 <usart_send_char_pooling>
 800089a:	f85d eb04 	ldr.w	lr, [sp], #4
 800089e:	b500      	push	{lr}
 80008a0:	f000 f869 	bl	8000976 <usart_send_char_pooling>
 80008a4:	f85d eb04 	ldr.w	lr, [sp], #4
 80008a8:	b500      	push	{lr}
 80008aa:	f000 f864 	bl	8000976 <usart_send_char_pooling>
 80008ae:	f85d eb04 	ldr.w	lr, [sp], #4
 80008b2:	b500      	push	{lr}
 80008b4:	f000 f85f 	bl	8000976 <usart_send_char_pooling>
 80008b8:	f85d eb04 	ldr.w	lr, [sp], #4
 80008bc:	b500      	push	{lr}
 80008be:	f000 f85a 	bl	8000976 <usart_send_char_pooling>
 80008c2:	f85d eb04 	ldr.w	lr, [sp], #4
 80008c6:	b500      	push	{lr}
 80008c8:	f000 f855 	bl	8000976 <usart_send_char_pooling>
 80008cc:	f85d eb04 	ldr.w	lr, [sp], #4
 80008d0:	b500      	push	{lr}
 80008d2:	f000 f850 	bl	8000976 <usart_send_char_pooling>
 80008d6:	f85d eb04 	ldr.w	lr, [sp], #4
 80008da:	b500      	push	{lr}
 80008dc:	f000 f84b 	bl	8000976 <usart_send_char_pooling>
 80008e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80008e4:	f04f 010a 	mov.w	r1, #10
 80008e8:	b500      	push	{lr}
 80008ea:	f000 f844 	bl	8000976 <usart_send_char_pooling>
 80008ee:	b500      	push	{lr}
 80008f0:	f04f 0120 	mov.w	r1, #32
 80008f4:	f04f 012a 	mov.w	r1, #42	@ 0x2a
 80008f8:	b500      	push	{lr}
 80008fa:	f000 f83c 	bl	8000976 <usart_send_char_pooling>
 80008fe:	f85d eb04 	ldr.w	lr, [sp], #4
 8000902:	b500      	push	{lr}
 8000904:	f000 f837 	bl	8000976 <usart_send_char_pooling>
 8000908:	f85d eb04 	ldr.w	lr, [sp], #4
 800090c:	b500      	push	{lr}
 800090e:	f000 f832 	bl	8000976 <usart_send_char_pooling>
 8000912:	f85d eb04 	ldr.w	lr, [sp], #4
 8000916:	b500      	push	{lr}
 8000918:	f000 f82d 	bl	8000976 <usart_send_char_pooling>
 800091c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000920:	b500      	push	{lr}
 8000922:	f000 f828 	bl	8000976 <usart_send_char_pooling>
 8000926:	f85d eb04 	ldr.w	lr, [sp], #4
 800092a:	b500      	push	{lr}
 800092c:	f000 f823 	bl	8000976 <usart_send_char_pooling>
 8000930:	f85d eb04 	ldr.w	lr, [sp], #4
 8000934:	b500      	push	{lr}
 8000936:	f000 f81e 	bl	8000976 <usart_send_char_pooling>
 800093a:	f85d eb04 	ldr.w	lr, [sp], #4
 800093e:	b500      	push	{lr}
 8000940:	f000 f819 	bl	8000976 <usart_send_char_pooling>
 8000944:	f85d eb04 	ldr.w	lr, [sp], #4
 8000948:	b500      	push	{lr}
 800094a:	f000 f814 	bl	8000976 <usart_send_char_pooling>
 800094e:	f85d eb04 	ldr.w	lr, [sp], #4
 8000952:	b500      	push	{lr}
 8000954:	f000 f80f 	bl	8000976 <usart_send_char_pooling>
 8000958:	f85d eb04 	ldr.w	lr, [sp], #4
 800095c:	b500      	push	{lr}
 800095e:	f000 f80a 	bl	8000976 <usart_send_char_pooling>
 8000962:	f85d eb04 	ldr.w	lr, [sp], #4
 8000966:	f04f 010a 	mov.w	r1, #10
 800096a:	b500      	push	{lr}
 800096c:	f000 f803 	bl	8000976 <usart_send_char_pooling>
 8000970:	b500      	push	{lr}

 b wait
 8000972:	e7ff      	b.n	8000974 <wait>

08000974 <wait>:

/*--------------*/
wait:
 b wait
 8000974:	e7fe      	b.n	8000974 <wait>

08000976 <usart_send_char_pooling>:
/*--------------*/
usart_send_char_pooling:
 //program C
 ldr r0, =USART2_DR_ADDR
 8000976:	481a      	ldr	r0, [pc, #104]	@ (80009e0 <moder_config+0x1e>)
 //set character code
 str r1, [r0]
 8000978:	6001      	str	r1, [r0, #0]
 //check TC (transmission complete)
 ldr r0, =USART2_SR_ADDR
 800097a:	481a      	ldr	r0, [pc, #104]	@ (80009e4 <moder_config+0x22>)

0800097c <loop_check_tc>:
loop_check_tc:
 ldr r2, [r0]
 800097c:	6802      	ldr	r2, [r0, #0]
 // if TC=0, usart is busy in Tx
 ands r2, (0b1 << 6)
 800097e:	f012 0240 	ands.w	r2, r2, #64	@ 0x40
 beq loop_check_tc
 8000982:	d0fb      	beq.n	800097c <loop_check_tc>

 bx lr
 8000984:	4770      	bx	lr

08000986 <usart_config>:
/*--------------*/
usart_config:
 //program CR1
 ldr r0, =USART2_CR1_ADDR
 8000986:	4818      	ldr	r0, [pc, #96]	@ (80009e8 <moder_config+0x26>)
 ldr r1, [r0]
 8000988:	6801      	ldr	r1, [r0, #0]
 //enable USART
 orr r1, (0b1 << 13)
 800098a:	f441 5100 	orr.w	r1, r1, #8192	@ 0x2000
 //enable TX
 orr r1, (0b1 << 3)
 800098e:	f041 0108 	orr.w	r1, r1, #8
 str r1, [r0]
 8000992:	6001      	str	r1, [r0, #0]

 //program bbr register, APB1 = 16MHz (by default)
 ldr r0, =USART_BRR_ADDR
 8000994:	4815      	ldr	r0, [pc, #84]	@ (80009ec <moder_config+0x2a>)
 //set fraction for 19200b/s
 mov r1, (0b1 << 3)
 8000996:	f04f 0108 	mov.w	r1, #8
 //set mantissa for 19200b/s
 orr r1, (0b110100 << 4)
 800099a:	f441 7150 	orr.w	r1, r1, #832	@ 0x340
 str r1, [r0]
 800099e:	6001      	str	r1, [r0, #0]

 //check TC (transmission complete) for initial frame
 ldr r0, =USART2_SR_ADDR
 80009a0:	4810      	ldr	r0, [pc, #64]	@ (80009e4 <moder_config+0x22>)

080009a2 <loop_check_initial_frame>:
loop_check_initial_frame:
 ldr r1, [r0]
 80009a2:	6801      	ldr	r1, [r0, #0]
 // if TC=0, usart is busy in Tx
 ands r1, (0b1 << 6)
 80009a4:	f011 0140 	ands.w	r1, r1, #64	@ 0x40
 beq loop_check_initial_frame
 80009a8:	d0fb      	beq.n	80009a2 <loop_check_initial_frame>

 bx lr
 80009aa:	4770      	bx	lr

080009ac <rcc_config>:
/*--------------*/
rcc_config:
 ldr r0, =RCC_AHB1ENR_ADDR
 80009ac:	4810      	ldr	r0, [pc, #64]	@ (80009f0 <moder_config+0x2e>)
 ldr r1, [r0]
 80009ae:	6801      	ldr	r1, [r0, #0]

 //enable GPIOA
 orr r1, (0b1 << 0)
 80009b0:	f041 0101 	orr.w	r1, r1, #1
 str r1, [r0]
 80009b4:	6001      	str	r1, [r0, #0]

 ldr r0, =RCC_APB1ENR_ADDR
 80009b6:	480f      	ldr	r0, [pc, #60]	@ (80009f4 <moder_config+0x32>)
 ldr r1, [r0]
 80009b8:	6801      	ldr	r1, [r0, #0]

 //enable USART2 clock
 orr r1, (0b1 << 17)
 80009ba:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
 str r1, [r0]
 80009be:	6001      	str	r1, [r0, #0]

 bx lr
 80009c0:	4770      	bx	lr

080009c2 <moder_config>:
/*--------------*/
moder_config:
 ldr r0, =GPIOA_MODER_ADDR
 80009c2:	480d      	ldr	r0, [pc, #52]	@ (80009f8 <moder_config+0x36>)
 ldr r1, [r0]
 80009c4:	6801      	ldr	r1, [r0, #0]

 bfc r1, 4, 2
 80009c6:	f36f 1105 	bfc	r1, #4, #2
 //set AF mode
 orr r1, (0b10 << 4)
 80009ca:	f041 0120 	orr.w	r1, r1, #32
 str r1, [r0]
 80009ce:	6001      	str	r1, [r0, #0]

 ldr r0, =GPIOA_AFRL_ADDR
 80009d0:	480a      	ldr	r0, [pc, #40]	@ (80009fc <moder_config+0x3a>)
 ldr r1, [r0]
 80009d2:	6801      	ldr	r1, [r0, #0]

 bfc r1, 8, 4
 80009d4:	f36f 210b 	bfc	r1, #8, #4
 //set AF7 mode (USART2TX)
 orr r1, (0b0111 << 8)
 80009d8:	f441 61e0 	orr.w	r1, r1, #1792	@ 0x700
 str r1, [r0]
 80009dc:	6001      	str	r1, [r0, #0]

 bx lr
 80009de:	4770      	bx	lr
 ldr r0, =USART2_DR_ADDR
 80009e0:	40004404 	.word	0x40004404
 ldr r0, =USART2_SR_ADDR
 80009e4:	40004400 	.word	0x40004400
 ldr r0, =USART2_CR1_ADDR
 80009e8:	4000440c 	.word	0x4000440c
 ldr r0, =USART_BRR_ADDR
 80009ec:	40004408 	.word	0x40004408
 ldr r0, =RCC_AHB1ENR_ADDR
 80009f0:	40023830 	.word	0x40023830
 ldr r0, =RCC_APB1ENR_ADDR
 80009f4:	40023840 	.word	0x40023840
 ldr r0, =GPIOA_MODER_ADDR
 80009f8:	40020000 	.word	0x40020000
 ldr r0, =GPIOA_AFRL_ADDR
 80009fc:	40020020 	.word	0x40020020

08000a00 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000a00:	f8df d030 	ldr.w	sp, [pc, #48]	@ 8000a34 <LoopFillZerobss+0xe>
  

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000a04:	480c      	ldr	r0, [pc, #48]	@ (8000a38 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8000a06:	490d      	ldr	r1, [pc, #52]	@ (8000a3c <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8000a08:	4a0d      	ldr	r2, [pc, #52]	@ (8000a40 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8000a0a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000a0c:	e002      	b.n	8000a14 <LoopCopyDataInit>

08000a0e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000a0e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000a10:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000a12:	3304      	adds	r3, #4

08000a14 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000a14:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000a16:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000a18:	d3f9      	bcc.n	8000a0e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000a1a:	4a0a      	ldr	r2, [pc, #40]	@ (8000a44 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8000a1c:	4c0a      	ldr	r4, [pc, #40]	@ (8000a48 <LoopFillZerobss+0x22>)
  movs r3, #0
 8000a1e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000a20:	e001      	b.n	8000a26 <LoopFillZerobss>

08000a22 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000a22:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000a24:	3204      	adds	r2, #4

08000a26 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000a26:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000a28:	d3fb      	bcc.n	8000a22 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8000a2a:	f000 f811 	bl	8000a50 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000a2e:	f7ff fbcb 	bl	80001c8 <main>
  bx  lr    
 8000a32:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8000a34:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000a38:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000a3c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000a40:	08000ab8 	.word	0x08000ab8
  ldr r2, =_sbss
 8000a44:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000a48:	2000001c 	.word	0x2000001c

08000a4c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000a4c:	e7fe      	b.n	8000a4c <ADC_IRQHandler>
	...

08000a50 <__libc_init_array>:
 8000a50:	b570      	push	{r4, r5, r6, lr}
 8000a52:	4d0d      	ldr	r5, [pc, #52]	@ (8000a88 <__libc_init_array+0x38>)
 8000a54:	4c0d      	ldr	r4, [pc, #52]	@ (8000a8c <__libc_init_array+0x3c>)
 8000a56:	1b64      	subs	r4, r4, r5
 8000a58:	10a4      	asrs	r4, r4, #2
 8000a5a:	2600      	movs	r6, #0
 8000a5c:	42a6      	cmp	r6, r4
 8000a5e:	d109      	bne.n	8000a74 <__libc_init_array+0x24>
 8000a60:	4d0b      	ldr	r5, [pc, #44]	@ (8000a90 <__libc_init_array+0x40>)
 8000a62:	4c0c      	ldr	r4, [pc, #48]	@ (8000a94 <__libc_init_array+0x44>)
 8000a64:	f000 f818 	bl	8000a98 <_init>
 8000a68:	1b64      	subs	r4, r4, r5
 8000a6a:	10a4      	asrs	r4, r4, #2
 8000a6c:	2600      	movs	r6, #0
 8000a6e:	42a6      	cmp	r6, r4
 8000a70:	d105      	bne.n	8000a7e <__libc_init_array+0x2e>
 8000a72:	bd70      	pop	{r4, r5, r6, pc}
 8000a74:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a78:	4798      	blx	r3
 8000a7a:	3601      	adds	r6, #1
 8000a7c:	e7ee      	b.n	8000a5c <__libc_init_array+0xc>
 8000a7e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a82:	4798      	blx	r3
 8000a84:	3601      	adds	r6, #1
 8000a86:	e7f2      	b.n	8000a6e <__libc_init_array+0x1e>
 8000a88:	08000ab0 	.word	0x08000ab0
 8000a8c:	08000ab0 	.word	0x08000ab0
 8000a90:	08000ab0 	.word	0x08000ab0
 8000a94:	08000ab4 	.word	0x08000ab4

08000a98 <_init>:
 8000a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a9a:	bf00      	nop
 8000a9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a9e:	bc08      	pop	{r3}
 8000aa0:	469e      	mov	lr, r3
 8000aa2:	4770      	bx	lr

08000aa4 <_fini>:
 8000aa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000aa6:	bf00      	nop
 8000aa8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000aaa:	bc08      	pop	{r3}
 8000aac:	469e      	mov	lr, r3
 8000aae:	4770      	bx	lr
