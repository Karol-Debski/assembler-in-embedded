/*
 * led.c
 *
 *  Created on: Mar 2, 2025
 *      Author: Karol
 */


 //rcc
#define RCC_BASE_ADDR 	   0x40023800
#define RCC_AHB1ENR_OFFSET 0x30
#define RCC_AHB1ENR_ADDR   (RCC_BASE_ADDR + RCC_AHB1ENR_OFFSET)
#define GPIOD_CLK_EN       (1U << 3)
//moder
#define GPIOD_ADDR                 0x40020C00
#define GPIOD_MODER_OFFSET         0x0
#define GPIOD_MODER_ADDR           (GPIOD_ADDR + GPIOD_MODER_OFFSET)
#define GPIOD_MODER_12_OUTPUT_MODE (0x01 << 24)
//odr
#define GPIOD_ODR_OFFSET 0x14
#define GPIOD_ODR_ADDR   (GPIOD_ADDR + GPIOD_ODR_OFFSET)


void flip_led_state(uint32_t* gpio_odr_addr)
{
	gpio_odr_addr* |= (1U << 12);
/*
	movw r0, :lower16:GPIOD_ODR_ADDR
 movt r0, :upper16:GPIOD_ODR_ADDR
 ldr r1, [r0]
 mov r2, 0x1 << 12
 eor r1, r2

 str r1, [r0]
 bx lr
*/
}
void rcc_config()
{
   f
movw r0, :lower16:RCC_AHB1ENR_ADDR
 movt r0, :upper16:RCC_AHB1ENR_ADDR

 movw r1, :lower16:GPIOD_CLK_EN

 str r1, [r0]
 bx lr
};

void moder_config()
{
movw r0, :lower16:GPIOD_MODER_ADDR
 movt r0, :upper16:GPIOD_MODER_ADDR

 movw r1, :lower16:GPIOD_MODER_12_OUTPUT_MODE
 movt r1, :upper16:GPIOD_MODER_12_OUTPUT_MODE

 str r1, [r0]
 bx lr
}
